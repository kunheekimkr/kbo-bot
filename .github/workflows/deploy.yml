name: deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [18.16.0]

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Npm -v
        run: npm -v

      - name: create env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} >> .env
          echo clientId=${{ secrets.clientId }} >> .env
          cat .env

      - name: install dependencies
        working-directory: ./
        run: |
          npm ci

      - name: run test
        working-directory: ./
        run: |
          npm run test

      - name: Build Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kbo-bot .
          docker push ${{ secrets.DOCKER_USERNAME }}/kbo-bot

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker rmi ${{ secrets.DOCKER_USERNAME }}/kbo-bot
            docker pull ${{ secrets.DOCKER_USERNAME }}/kbo-bot
            docker run -e DISCORD_TOKEN=${{secrets.DISCORD_TOKEN}} -e clientId=${{secrets.CLIENTID}} ${{secrets.DOCKER_USERNAME}}/kbo-bot
